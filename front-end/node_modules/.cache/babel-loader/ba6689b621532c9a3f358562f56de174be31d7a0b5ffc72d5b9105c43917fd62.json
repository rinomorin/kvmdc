{"ast":null,"code":"var _jsxFileName = \"/git/kvmdc/front-end/src/components/KVMNodes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Nodes.css';\nimport ServerPopMenu from './ServerPopMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyNodes() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    fetch('/api/hosts').then(response => response.json()).then(data => setNodes(data)).catch(error => console.error('Error fetching nodes:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: nodes.map((group, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"DataCenter\",\n      \"data-header\": \"DataCenter ({group.domain})\",\n      children: group.members.map((member, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        value: member.node[0].ip,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(ServerPopMenu, {\n            serverName: member.node[0].name,\n            serverType: \"Host\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(MyNodes, \"PbTFKmE3ANQd50N7lqnMXthrMF4=\");\n_c = MyNodes;\nfunction KVMNodes() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Nodes\",\n    className: \"KVMNodes\",\n    children: /*#__PURE__*/_jsxDEV(MyNodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c2 = KVMNodes;\nexport default KVMNodes;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyNodes\");\n$RefreshReg$(_c2, \"KVMNodes\");","map":{"version":3,"names":["React","useState","useEffect","ServerPopMenu","jsxDEV","_jsxDEV","MyNodes","_s","nodes","setNodes","fetch","then","response","json","data","catch","error","console","children","map","group","index","className","members","member","value","node","ip","serverName","name","serverType","fileName","_jsxFileName","lineNumber","columnNumber","_c","KVMNodes","id","_c2","$RefreshReg$"],"sources":["/git/kvmdc/front-end/src/components/KVMNodes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/Nodes.css';\nimport ServerPopMenu from './ServerPopMenu';\n\nfunction MyNodes() {\n    const [nodes, setNodes] = useState([]);\n\n    useEffect(() => {\n        fetch('/api/hosts')\n            .then(response => response.json())\n            .then(data => setNodes(data))\n            .catch(error => console.error('Error fetching nodes:', error));\n    }, []);\n    return (\n        <div>\n            {nodes.map((group, index) => (\n                <ul className='DataCenter' data-header=\"DataCenter ({group.domain})\" key={index}>\n                    {group.members.map((member, index) => (\n                        <li key={index} value={member.node[0].ip}>\n                        <strong><ServerPopMenu serverName={member.node[0].name} serverType=\"Host\" /></strong>\n                        </li>\n                    ))}\n                </ul>\n            ))}\n        </div>\n    );\n}\n\nfunction KVMNodes() {\n    return (\n        <div id=\"Nodes\" className=\"KVMNodes\">\n            <MyNodes />\n        </div>\n    );\n}\n\nexport default KVMNodes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,YAAY,CAAC,CACdC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EACN,oBACIX,OAAA;IAAAa,QAAA,EACKV,KAAK,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpBhB,OAAA;MAAIiB,SAAS,EAAC,YAAY;MAAC,eAAY,6BAA6B;MAAAJ,QAAA,EAC/DE,KAAK,CAACG,OAAO,CAACJ,GAAG,CAAC,CAACK,MAAM,EAAEH,KAAK,kBAC7BhB,OAAA;QAAgBoB,KAAK,EAAED,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,EAAG;QAAAT,QAAA,eACzCb,OAAA;UAAAa,QAAA,eAAQb,OAAA,CAACF,aAAa;YAACyB,UAAU,EAAEJ,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,IAAK;YAACC,UAAU,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GAD5Eb,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC,GALoEb,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM3E,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC3B,EAAA,CAtBQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAwBhB,SAAS8B,QAAQA,CAAA,EAAG;EAChB,oBACI/B,OAAA;IAAKgC,EAAE,EAAC,OAAO;IAACf,SAAS,EAAC,UAAU;IAAAJ,QAAA,eAChCb,OAAA,CAACC,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACI,GAAA,GANQF,QAAQ;AAQjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}