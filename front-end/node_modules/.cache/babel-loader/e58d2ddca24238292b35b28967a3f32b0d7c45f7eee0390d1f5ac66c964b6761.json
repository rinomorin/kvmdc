{"ast":null,"code":"var _jsxFileName = \"/git/kvmdc/front-end/src/components/ServerPopMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../css/ServerPopMenu.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerPopMenu({\n  serverName,\n  serverType\n}) {\n  _s();\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const menuRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuVisible(false);\n      }\n    }\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  const handleContextMenu = event => {\n    event.preventDefault();\n    setMenuPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    setMenuVisible(true);\n  };\n  const handleClick = () => {\n    setMenuVisible(!menuVisible);\n  };\n  let options;\n  switch (serverType) {\n    case 'Host':\n      options = ['Connect', 'Disconnect', 'Remove', 'Status', 'Console', 'Reports'];\n      break;\n    case 'VM':\n      options = ['edit', 'console', 'reports', 'power up', 'power down', 'pause'];\n      break;\n    default:\n      options = [];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"server-menu\",\n    ref: menuRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-name\",\n      onContextMenu: handleContextMenu,\n      onClick: handleClick,\n      children: serverName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), menuVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      style: {\n        top: menuPosition.y,\n        left: menuPosition.x\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ServerPopMenu, \"H69OAN/oNvJK0gT86tf3Fie9Uk4=\");\n_c = ServerPopMenu;\nexport default ServerPopMenu;\nvar _c;\n$RefreshReg$(_c, \"ServerPopMenu\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ServerPopMenu","serverName","serverType","_s","menuVisible","setMenuVisible","menuPosition","setMenuPosition","x","y","menuRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleContextMenu","preventDefault","clientX","clientY","handleClick","options","className","ref","children","onContextMenu","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","top","left","map","option","index","_c","$RefreshReg$"],"sources":["/git/kvmdc/front-end/src/components/ServerPopMenu.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../css/ServerPopMenu.css'; // Import your CSS file for styling\n\nfunction ServerPopMenu({ serverName, serverType }) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\n  const menuRef = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuVisible(false);\n      }\n    }\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const handleContextMenu = (event) => {\n    event.preventDefault();\n    setMenuPosition({ x: event.clientX, y: event.clientY });\n    setMenuVisible(true);\n  };\n\n  const handleClick = () => {\n    setMenuVisible(!menuVisible);\n  };\n  let options;\n  switch (serverType) {\n    case 'Host':\n      options = ['Connect', 'Disconnect', 'Remove', 'Status', 'Console', 'Reports'];\n      break;\n    case 'VM':\n      options = ['edit', 'console', 'reports', 'power up', 'power down', 'pause'];\n      break;\n    default:\n      options = [];\n  }\n\n  return (\n    <div className=\"server-menu\" ref={menuRef}>\n      <div className=\"server-name\" onContextMenu={handleContextMenu} onClick={handleClick}>{serverName}</div>\n      {menuVisible && (\n        <div className=\"menu\" style={{ top: menuPosition.y, left: menuPosition.x }}>\n          <ul>\n          {options.map((option, index) => (\n              <li key={index} onClick={() => handleClick(option)}>{option}</li>\n            )\n          )}\n          </ul>\n        </div>\n      )}\n    </div> \n  );\n}\n\nexport default ServerPopMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAChE,MAAMC,OAAO,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,SAASe,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIF,OAAO,CAACG,OAAO,IAAI,CAACH,OAAO,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC9DV,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;IAEAW,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;IAEtD,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAIP,KAAK,IAAK;IACnCA,KAAK,CAACQ,cAAc,CAAC,CAAC;IACtBb,eAAe,CAAC;MAAEC,CAAC,EAAEI,KAAK,CAACS,OAAO;MAAEZ,CAAC,EAAEG,KAAK,CAACU;IAAQ,CAAC,CAAC;IACvDjB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBlB,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EACD,IAAIoB,OAAO;EACX,QAAQtB,UAAU;IAChB,KAAK,MAAM;MACTsB,OAAO,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC;MAC7E;IACF,KAAK,IAAI;MACPA,OAAO,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,CAAC;MAC3E;IACF;MACEA,OAAO,GAAG,EAAE;EAChB;EAEA,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,aAAa;IAACC,GAAG,EAAEhB,OAAQ;IAAAiB,QAAA,gBACxC5B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAACG,aAAa,EAAET,iBAAkB;MAACU,OAAO,EAAEN,WAAY;MAAAI,QAAA,EAAE1B;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACtG7B,WAAW,iBACVL,OAAA;MAAK0B,SAAS,EAAC,MAAM;MAACS,KAAK,EAAE;QAAEC,GAAG,EAAE7B,YAAY,CAACG,CAAC;QAAE2B,IAAI,EAAE9B,YAAY,CAACE;MAAE,CAAE;MAAAmB,QAAA,eACzE5B,OAAA;QAAA4B,QAAA,EACCH,OAAO,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBxC,OAAA;UAAgB8B,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACe,MAAM,CAAE;UAAAX,QAAA,EAAEW;QAAM,GAAlDC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkD,CAEpE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CAvDQH,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAyDtB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}