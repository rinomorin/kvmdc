{"ast":null,"code":"var _jsxFileName = \"/git/kvmdc/front-end/src/components/KVMVms.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Nodes.css';\nimport ServerPopMenu from './ServerPopMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyVms() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    fetch('/api/vms').then(response => response.json()).then(data => setNodes(data)).catch(error => console.error('Error fetching nodes:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"DataCenter\",\n      \"data-header\": \"vms\",\n      children: nodes.map((group, index) => group.members.map((member, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: member.vm.map((vm, vmIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          value: vm.ip,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: /*#__PURE__*/_jsxDEV(ServerPopMenu, {\n              serverName: vm.name,\n              serverType: \"VM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, vmIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(MyVms, \"PbTFKmE3ANQd50N7lqnMXthrMF4=\");\n_c = MyVms;\nfunction KVMVms() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"KVMVms\",\n    className: \"LeftSide\",\n    children: /*#__PURE__*/_jsxDEV(MyVms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c2 = KVMVms;\nexport default KVMVms;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyVms\");\n$RefreshReg$(_c2, \"KVMVms\");","map":{"version":3,"names":["React","useState","useEffect","ServerPopMenu","jsxDEV","_jsxDEV","MyVms","_s","nodes","setNodes","fetch","then","response","json","data","catch","error","console","children","className","map","group","index","members","member","Fragment","vm","vmIndex","value","ip","serverName","name","serverType","fileName","_jsxFileName","lineNumber","columnNumber","_c","KVMVms","id","_c2","$RefreshReg$"],"sources":["/git/kvmdc/front-end/src/components/KVMVms.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/Nodes.css';\nimport ServerPopMenu from './ServerPopMenu';\nfunction MyVms() {\n    const [nodes, setNodes] = useState([]);\n\n    useEffect(() => {\n        fetch('/api/vms')\n            .then(response => response.json())\n            .then(data => setNodes(data))\n            .catch(error => console.error('Error fetching nodes:', error));\n    }, []);\n\n    return (\n        <div>\n            <ul className='DataCenter' data-header=\"vms\">\n                {nodes.map((group, index) => (\n                    group.members.map((member, index) => (\n                        <React.Fragment key={index}>\n                            {member.vm.map((vm, vmIndex) => (\n                                <li key={vmIndex} value={vm.ip}>\n                                <strong><ServerPopMenu serverName={vm.name} serverType=\"VM\" /></strong>\n                                </li>\n                            ))}\n                        </React.Fragment>\n                    ))\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nfunction KVMVms() {\n    return (\n        <div id=\"KVMVms\" className=\"LeftSide\">\n            <MyVms />\n        </div>\n    );\n}\n\nexport default KVMVms;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,UAAU,CAAC,CACZC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAIc,SAAS,EAAC,YAAY;MAAC,eAAY,KAAK;MAAAD,QAAA,EACvCV,KAAK,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KACpBD,KAAK,CAACE,OAAO,CAACH,GAAG,CAAC,CAACI,MAAM,EAAEF,KAAK,kBAC5BjB,OAAA,CAACL,KAAK,CAACyB,QAAQ;QAAAP,QAAA,EACVM,MAAM,CAACE,EAAE,CAACN,GAAG,CAAC,CAACM,EAAE,EAAEC,OAAO,kBACvBtB,OAAA;UAAkBuB,KAAK,EAAEF,EAAE,CAACG,EAAG;UAAAX,QAAA,eAC/Bb,OAAA;YAAAa,QAAA,eAAQb,OAAA,CAACF,aAAa;cAAC2B,UAAU,EAAEJ,EAAE,CAACK,IAAK;cAACC,UAAU,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,GAD9DT,OAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACP;MAAC,GALed,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAC7B,EAAA,CA3BQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA6Bd,SAASgC,MAAMA,CAAA,EAAG;EACd,oBACIjC,OAAA;IAAKkC,EAAE,EAAC,QAAQ;IAACpB,SAAS,EAAC,UAAU;IAAAD,QAAA,eACjCb,OAAA,CAACC,KAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACI,GAAA,GANQF,MAAM;AAQf,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}